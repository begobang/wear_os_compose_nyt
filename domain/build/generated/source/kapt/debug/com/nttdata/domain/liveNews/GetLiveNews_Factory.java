// Generated by Dagger (https://dagger.dev).
package com.nttdata.domain.liveNews;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetLiveNews_Factory implements Factory<GetLiveNews> {
  private final Provider<GetLiveNewsRepository> repositoryProvider;

  public GetLiveNews_Factory(Provider<GetLiveNewsRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetLiveNews get() {
    return newInstance(repositoryProvider.get());
  }

  public static GetLiveNews_Factory create(Provider<GetLiveNewsRepository> repositoryProvider) {
    return new GetLiveNews_Factory(repositoryProvider);
  }

  public static GetLiveNews newInstance(GetLiveNewsRepository repository) {
    return new GetLiveNews(repository);
  }
}
