// Generated by Dagger (https://dagger.dev).
package com.nttdata.data.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import okhttp3.logging.HttpLoggingInterceptor;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataModuleDI_ProvideLoggingInterceptorFactory implements Factory<HttpLoggingInterceptor> {
  private final DataModuleDI module;

  public DataModuleDI_ProvideLoggingInterceptorFactory(DataModuleDI module) {
    this.module = module;
  }

  @Override
  public HttpLoggingInterceptor get() {
    return provideLoggingInterceptor(module);
  }

  public static DataModuleDI_ProvideLoggingInterceptorFactory create(DataModuleDI module) {
    return new DataModuleDI_ProvideLoggingInterceptorFactory(module);
  }

  public static HttpLoggingInterceptor provideLoggingInterceptor(DataModuleDI instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideLoggingInterceptor());
  }
}
