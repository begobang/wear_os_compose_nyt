// Generated by Dagger (https://dagger.dev).
package com.nttdata.data.repositoryImpl;

import com.nttdata.data.remoteDataSource.GetLiveNewsRemoteDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetLiveNewsRepositoryImpl_Factory implements Factory<GetLiveNewsRepositoryImpl> {
  private final Provider<GetLiveNewsRemoteDataSource> remoteDataSourceProvider;

  public GetLiveNewsRepositoryImpl_Factory(
      Provider<GetLiveNewsRemoteDataSource> remoteDataSourceProvider) {
    this.remoteDataSourceProvider = remoteDataSourceProvider;
  }

  @Override
  public GetLiveNewsRepositoryImpl get() {
    return newInstance(remoteDataSourceProvider.get());
  }

  public static GetLiveNewsRepositoryImpl_Factory create(
      Provider<GetLiveNewsRemoteDataSource> remoteDataSourceProvider) {
    return new GetLiveNewsRepositoryImpl_Factory(remoteDataSourceProvider);
  }

  public static GetLiveNewsRepositoryImpl newInstance(
      GetLiveNewsRemoteDataSource remoteDataSource) {
    return new GetLiveNewsRepositoryImpl(remoteDataSource);
  }
}
