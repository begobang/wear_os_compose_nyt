// Generated by Dagger (https://dagger.dev).
package com.nttdata.data.repositoryImpl;

import com.nttdata.data.remoteDataSource.GetSectionsRemoteDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetSectionsRepositoryImpl_Factory implements Factory<GetSectionsRepositoryImpl> {
  private final Provider<GetSectionsRemoteDataSource> remoteDataSourceProvider;

  public GetSectionsRepositoryImpl_Factory(
      Provider<GetSectionsRemoteDataSource> remoteDataSourceProvider) {
    this.remoteDataSourceProvider = remoteDataSourceProvider;
  }

  @Override
  public GetSectionsRepositoryImpl get() {
    return newInstance(remoteDataSourceProvider.get());
  }

  public static GetSectionsRepositoryImpl_Factory create(
      Provider<GetSectionsRemoteDataSource> remoteDataSourceProvider) {
    return new GetSectionsRepositoryImpl_Factory(remoteDataSourceProvider);
  }

  public static GetSectionsRepositoryImpl newInstance(
      GetSectionsRemoteDataSource remoteDataSource) {
    return new GetSectionsRepositoryImpl(remoteDataSource);
  }
}
