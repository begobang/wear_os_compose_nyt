// Generated by Dagger (https://dagger.dev).
package com.nttdata.data.repositoryImpl;

import com.nttdata.data.remoteDataSource.GetArchiveRemoteDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetArchiveRepositoryImpl_Factory implements Factory<GetArchiveRepositoryImpl> {
  private final Provider<GetArchiveRemoteDataSource> remoteDataSourceProvider;

  public GetArchiveRepositoryImpl_Factory(
      Provider<GetArchiveRemoteDataSource> remoteDataSourceProvider) {
    this.remoteDataSourceProvider = remoteDataSourceProvider;
  }

  @Override
  public GetArchiveRepositoryImpl get() {
    return newInstance(remoteDataSourceProvider.get());
  }

  public static GetArchiveRepositoryImpl_Factory create(
      Provider<GetArchiveRemoteDataSource> remoteDataSourceProvider) {
    return new GetArchiveRepositoryImpl_Factory(remoteDataSourceProvider);
  }

  public static GetArchiveRepositoryImpl newInstance(GetArchiveRemoteDataSource remoteDataSource) {
    return new GetArchiveRepositoryImpl(remoteDataSource);
  }
}
